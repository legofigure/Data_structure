#include <stdio.h>

int n;
int arr[500001];

typedef struct{
    int stack[500001];
    int index[500001];
    int top;
}Stack;

void init(Stack *s){
    s->top=-1;
}

void push(Stack *s,int n,int i){
    s->stack[++(s->top)] = n;
    s->index[s->top] = i;
}

int pop(Stack *s){
    return s->stack[(s->top)--];
}

int top(Stack *s){
    return s->stack[s->top];
}

int index_top(Stack *s){
    return s->index[s->top];
}

int empty(Stack *s){
    return (s->top == -1);
}


int main() {    
    Stack t;
    init(&t);
    scanf("%d",&n);
    for(int i=1;i<=n;i++){
        scanf("%d",&arr[i]);
    }

    for(int i=1;i<=n;i++){
        while(empty(&t)==0){
            if(top(&t)>arr[i]){
                printf("%d ",index_top(&t));
                push(&t,arr[i],i);
                break;
            }
            else{
                pop(&t);
            }
        }
        if(empty(&t)){
            push(&t,arr[i],i);
            printf("0 ");
        }
    }

    
    return 0;
}
