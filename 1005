#include <stdio.h>

int time[1001]={0,};
int in[1001]={0,};
int out[1001]={0,};
int apt[1001][1001]={0,};
int queue[1001]={0,};
int dp[1001]={0,};
int N,K,W;
int start=0,end=0;

int Max(int a,int b){
    if(a>b){
        return a;
    }
    else{
        return b;
    }
}

void push(int a){
    queue[end++]=a;
}

int pop(){
    return queue[start++];
}

void init(){
    for(int i=0;i<1001;i++){
        queue[i]=0;
        time[i]=0;
        in[i]=0;
        out[i]=0;
        dp[i]=0;
        for(int j=0;j<1001;j++){
            apt[i][j]=0;
        }
    }
    start=0;
    end=0;
}

void search(int s){
    int temp;
    push(s);
    while(start!=end){
        temp=pop();
        for(int i=1;i<=N;i++){
            if(apt[temp][i]==1){
                if(in[i]>1){
                    dp[i]=Max(dp[i],dp[temp]+time[temp]);
                    in[i]--;
                }
                else{
                    push(i);
                    dp[i]=Max(dp[i],dp[temp]+time[temp]);
                }
            }
        }
    }
}

int main() {
    int T;
    int X,Y;
    
    scanf("%d",&T);
    for(int i=0;i<T;i++){
        init();
        scanf("%d %d",&N,&K);
        for(int j=1;j<=N;j++){
            scanf("%d",&time[j]);
        }

        for(int j=1;j<=K;j++){
            scanf("%d %d",&X,&Y);
            apt[X][Y]=1;
            in[Y]+=1;
            out[X]+=1;
        }
        scanf("%d",&W);
        
        for(int j=1;j<=N;j++){
            if(in[j]==0){
                search(j);
            }
        }

        printf("%d\n",dp[W]+time[W]);
    }
    
    return 0;
}
