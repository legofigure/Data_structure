#include <stdio.h>

int D[1001]={0,};
int in[1001]={0,};
int apt[1001][1001]={0,};
int dp[1001]={0,};
int N,K,W;

int Max(int a,int b){
    if(a>b){
        return a;
    }
    else{
        return b;
    }
}

void DFS(int to,int time){
    int check=0;
    
    for(int i=1;i<=N;i++){
        if(apt[i][to]==1){
            dp[to]=Max(D[to]+time,dp[to]);
            check=1;
            DFS(i,dp[to]);
        }
    }
    if(check==0){
        dp[to]=Max(dp[to],D[to]+time);
    }
    
}

int main() {
    int T;
    int X,Y;
    int ans;
    
    scanf("%d",&T);
    for(int i=0;i<T;i++){
        scanf("%d %d",&N,&K);
        ans=0;
        for(int j=1;j<=N;j++){
            D[j]=0;
            in[j]=0;
            dp[j]=0;
            for(int k=1;k<=N;k++){
                apt[j][k]=0;
            }
        }
        for(int j=1;j<=N;j++){
            scanf("%d",&D[j]);
        }

        for(int j=1;j<=K;j++){
            scanf("%d %d",&X,&Y);
            apt[X][Y]=1;
        }
        scanf("%d",&W);

        DFS(W,0);

        for(int j=1;j<=N;j++){
            ans=Max(dp[j],ans);
        }

        printf("%d\n",ans);
    }
    
    return 0;
}
