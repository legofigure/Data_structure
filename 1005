#include <stdio.h>

int D[1001]={0,};
int apt[1001][1001]={0,};
int in_out[1001][2]={0,};
int dp[1001][1001]={0,};
int N,K,W;

int Max(int a,int b){
    if(a>b){
        return a;
    }
    else{
        return b;
    }
}

void inout(){
    for(int i=1;i<=N;i++){
        for(int j=1;j<=N;j++){
            in_out[i][0]+=apt[j][i]; //in
            in_out[i][1]+=apt[i][j]; //out
        }
    }
}

void DFS(int from,int to,int time){

    for(int i=1;i<=N;i++){
        if(apt[from][i]==1){
            dp[from][i]=D[from]+time;
            if(in_out[i][0]>1){
                
            }
            else{
                DFS(i,to,dp[from][i]);
            }
            
        }
    }
    
}

int main() {
    int T;
    int X,Y;
    int ans;
    
    scanf("%d",&T);
    for(int i=0;i<T;i++){
        ans=0;
        scanf("%d %d",&N,&K);
        for(int j=1;j<=N;j++){
            scanf("%d",&D[j]);
        }

        for(int j=1;j<=K;j++){
            scanf("%d %d",&X,&Y);
            apt[X][Y]=1;
        }
        scanf("%d",&W);
        inout();
        
        for(int j=1;j<=N;j++){
            if(in_out[j][0]==0){
                DFS(j,W,0);
            }
        }

        for(int j=1;j<=N;j++){
            ans=Max(ans,dp[j][W]+D[W]);
        }

        printf("%d",ans);
        
    }
    

    
    return 0;
}
